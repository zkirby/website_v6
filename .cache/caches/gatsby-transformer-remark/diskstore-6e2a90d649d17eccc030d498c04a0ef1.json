{"expireTime":9007200871020005000,"key":"transformer-remark-markdown-html-1de8ae6107b2ff0212f5d82f7aab7ae0--","val":"<h1>JS Compiler</h1>\n<ul>\n<li><a href=\"https://javascript.info/garbage-collection\">https://javascript.info/garbage-collection</a></li>\n</ul>\n<hr>\n<h3>Misc</h3>\n<ul>\n<li>All objects are true by default.</li>\n<li>Can alter the primitive representation of an object depending on the hint (string, number, default) more here: <a href=\"https://javascript.info/object-toprimitive\">https://javascript.info/object-toprimitive</a></li>\n</ul>\n<h3>Garbage Collection</h3>\n<ul>\n<li>\n<p>Main concept of memeory management in Js is reachability. How reachable are values that are usable or accessible somehow. </p>\n<ul>\n<li>These values are guaranteed to be stored in memory - called roots</li>\n<li>Base set of values:</li>\n<li>Local variables and parameters of the current function.</li>\n<li>Same for any other function on the call stack.</li>\n<li>Global vars</li>\n</ul>\n</li>\n<li>Any other value is considered to be reachable if it can be reached from a root by a reference or by a chain of references. </li>\n<li>Basic garbage collection algorithm is called \"mark and sweep\". Which is just a giant BFS traversal where all objects not visited get removed.</li>\n</ul>"}